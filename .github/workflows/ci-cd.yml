name: 'CI/CD'

on: [push, pull_request, workflow_dispatch]

jobs:
  setup:
    name: Setup and Install
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Install latest Bun
        uses: oven-sh/setup-bun@main
        with:
          bun-version: 'latest'

      - name: Cache Bun dependencies
        uses: actions/cache@main
        with:
          path: |
            ~/.bun
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install

  lint:
    name: Lint and Format
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Install latest Bun
        uses: oven-sh/setup-bun@main
        with:
          bun-version: 'latest'

      - name: Run ESLint
        run: bun run lint

      - name: Run Prettier
        run: bun run prettier --check --loglevel warn

      - name: Auto-fix and commit formatting
        if: github.ref == 'refs/heads/main' && !github.event.pull_request
        run: |
          bun run prettier --write
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add .
          git diff --quiet && git diff --staged --quiet || (git commit -m "style: make prettier happy" && git push)

      - name: Create Prettier Fix PR
        if: github.ref != 'refs/heads/main' && !github.event.pull_request
        uses: peter-evans/create-pull-request@main
        with:
          commit-message: "style: make prettier happy"
          title: "style: Prettier formatting fixes"
          body: "Automated formatting fixes from Prettier"
          branch: "prettier-fixes/$(date +%s)"
          delete-branch: true

  security:
    name: Security Audit
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Install latest Bun
        uses: oven-sh/setup-bun@main
        with:
          bun-version: 'latest'

      - name: Run security audit
        run: bun audit