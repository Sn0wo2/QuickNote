name: Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'
  workflow_dispatch:

jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Get frontend dependencies cache
        uses: actions/cache@v4
        id: bun-cache
        with:
          path: Frontend/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install frontend dependencies
        working-directory: Frontend
        run: bun install --frozen-lockfile

      - name: Build Frontend
        working-directory: Frontend
        run: bun run build

      - name: Cache frontend build artifacts
        uses: actions/cache/save@v4
        with:
          path: Frontend/static
          key: frontend-build-${{ github.sha }}

  release:
    name: Build and Release
    runs-on: ubuntu-latest
    needs: build-frontend
    permissions:
      contents: write
      id-token: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Restore frontend build artifacts
        uses: actions/cache/restore@v4
        id: frontend-build-cache
        with:
          path: Frontend/static
          key: frontend-build-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}