name: Build

on:
  push:
    branches: [ main ]
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

env:
  GO_VERSION: 1.24.4
  NODE_VERSION: '22'
  base: main

jobs:
  build-test-vet:
    name: Build & Test & Vet (Go)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Dependencies
        run: go mod tidy

      - name: Test
        run: go test $(go list ./...)

      - name: Vet
        run: go vet $(go list ./...)

      - name: Build
        run: go build -v ./...
  lint:
    name: Lint (Go)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest

      - name: Commit lint changes
        if: ${{ !github.head_ref }}
        continue-on-error: true
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add --all
          git commit -m "chore: lint style"

      - name: Create commit lint change pr
        if: ${{ !github.head_ref }}
        continue-on-error: true
        uses: peter-evans/create-pull-request@v7
        with:
          path: .
          signoff: true
          sign-commits: true
          base: ${{ env.base }}

  frontend-lint-format:
    name: Lint & Format (React)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: check linting (ESLint)
        run: bun run lint

      - name: check format (Prettier)
        run: bun run format:fix

      - name: Commit prettier changes
        if: ${{ !github.head_ref }}
        continue-on-error: true
        working-directory: .
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add --all
          git commit -m "chore: prettier style"

      - name: Create commit prettier change pr
        if: ${{ !github.head_ref }}
        continue-on-error: true
        uses: peter-evans/create-pull-request@v7
        with:
          path: .
          signoff: true
          sign-commits: true
          base: ${{ env.base }}

  frontend-build-and-release:
    name: Build Frontend and Release
    needs: [ build-test-vet, lint, frontend-lint-format ]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Frontend
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build Frontend
        run: bun run build

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
          workdir: .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}